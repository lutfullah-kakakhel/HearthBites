"""Initial schema SQLite compatible

Revision ID: a25a6ad07b8d
Revises: 
Create Date: 2025-10-07 16:00:38.527199

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a25a6ad07b8d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('rating_avg', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('locale', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('addresses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('line1', sa.String(), nullable=True),
    sa.Column('area', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('lat', sa.Double(), nullable=True),
    sa.Column('lng', sa.Double(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('menu_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('seller_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('price_pk', sa.Integer(), nullable=False),
    sa.Column('portion', sa.String(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_menu_items_seller', 'menu_items', ['seller_id', 'is_available'], unique=False)
    op.create_table('payouts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('amount_pk', sa.Integer(), nullable=False),
    sa.Column('method', sa.String(), nullable=True),
    sa.Column('external_ref', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rider_presence',
    sa.Column('rider_id', sa.UUID(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.Column('lat', sa.Double(), nullable=True),
    sa.Column('lng', sa.Double(), nullable=True),
    sa.ForeignKeyConstraint(['rider_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('rider_id')
    )
    op.create_index('idx_rider_presence', 'rider_presence', ['is_available', 'last_seen_at'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('buyer_id', sa.UUID(), nullable=True),
    sa.Column('seller_id', sa.UUID(), nullable=True),
    sa.Column('address_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('delivery_required', sa.Boolean(), nullable=True),
    sa.Column('payment_method', sa.String(), nullable=True),
    sa.Column('total_amount', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_orders_buyer_status', 'orders', ['buyer_id', 'status'], unique=False)
    op.create_index('idx_orders_seller_status', 'orders', ['seller_id', 'status'], unique=False)
    op.create_table('deliveries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=True),
    sa.Column('rider_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('pickup_lat', sa.Double(), nullable=True),
    sa.Column('pickup_lng', sa.Double(), nullable=True),
    sa.Column('drop_lat', sa.Double(), nullable=True),
    sa.Column('drop_lng', sa.Double(), nullable=True),
    sa.Column('distance_km', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('fee_pk', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['rider_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_deliveries_rider_status', 'deliveries', ['rider_id', 'status'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=True),
    sa.Column('menu_item_id', sa.UUID(), nullable=True),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['menu_item_id'], ['menu_items.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_items')
    op.drop_index('idx_deliveries_rider_status', table_name='deliveries')
    op.drop_table('deliveries')
    op.drop_index('idx_orders_seller_status', table_name='orders')
    op.drop_index('idx_orders_buyer_status', table_name='orders')
    op.drop_table('orders')
    op.drop_index('idx_rider_presence', table_name='rider_presence')
    op.drop_table('rider_presence')
    op.drop_table('payouts')
    op.drop_index('idx_menu_items_seller', table_name='menu_items')
    op.drop_table('menu_items')
    op.drop_table('addresses')
    op.drop_table('users')
    # ### end Alembic commands ###
